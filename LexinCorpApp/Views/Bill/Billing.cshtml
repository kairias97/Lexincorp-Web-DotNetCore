@model NewPreBillViewModel
@{
    ViewData["Title"] = "Facturación";
}
<script type="text/javascript">
    $(function () {
        $("#billDate").datepicker();
        $("#billDate").datepicker("option", "dateFormat", "dd/mm/yy");
        var date = new Date();
        var lastDay = new Date(date.getFullYear(), date.getMonth(), date.getDate());
        $("#billDate").datepicker("option", {
            maxDate: lastDay
        });
        $("#billDate").datepicker("setDate", date);
        $("#month").val(date.getMonth()+1);
        $("#year").val(date.getFullYear());
        $("#clientFilter").autocomplete({
                source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("Search","Client")",
                    type: "GET",
                    data: request,
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                                //console.log(data);
                                response($.map(data, function (item) {
                                    return {
                                    value: item.name,
                                label: item.name,
                                clientName: item.name,
                                clientId: item.id,
                                isEnglish: item.billingInEnglish,
                                feePerHour: item.feePerHour,
                                packages: item.packages
                                    }
                                }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                var err = eval("(" + XMLHttpRequest.responseText + ")");
                                alert(err.Message)
                        // console.log("Ajax Error!");
                    }
                        });
                    },
            minLength: 1,
            select: function (event, ui) {
                //$("#Package_ClientId").val(ui.item.clientId);
                $("#ClientId").val(ui.item.clientId);
                $("#ClientName").val(ui.item.clientName);
                $("#IsEnglish").prop('checked', ui.item.isEnglish);
                $("#IsClientSelected").prop('checked', true);
                $("#billName").val(ui.item.clientName);
                $("#clientLanguage").val(ui.item.isEnglish ? "Inglés" : "Español");
                //var list = ui.item.packages;
                var clientId = ui.item.id;
                $.ajax({
                url: "@Url.Action("SearchFinished", "Package")",
                    type: "GET",
                    data: { clientId: ui.item.clientId },
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        $("#Packages").empty().append("<option value=''>Seleccionar paquete</option>").val('null');
                        $("#Packages").append("<option value='-1'>Todos</option>").val('-1');
                        $.each(data, function (i, item) {
                            var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                            $("#Packages").append(options);
                        });
                        $("#Packages").val("");
                        //console.log(data);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        var err = eval("(" + XMLHttpRequest.responseText + ")");
                        alert(err.Message);
                    }
                });
                $.ajax({
                url: "@Url.Action("GetByDateMonthClient", "RetainerSubscription")",
                    type: "GET",
                    data: { clientId: ui.item.clientId, month: $("#month").val(), year: $("#year").val() },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        console.log(data);
                        $("#retainers").empty().append("<option value=''>Seleccionar retainer</option>").val('null');
                        $("#retainers").append("<option value='-1'>Todos</option>").val('-1');
                        $.each(data, function (i, item) {
                            //var name = $("#isEnglish").val() ? item.retainerType.englishName : item.retainerType.spanishName;
                            var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                            $("#retainers").append(options);
                        });
                        console.log($("#retainers").children().length);
                        $("#retainers").val("");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //var err = eval("(" + XMLHttpRequest.responseText + ")");
                        //alert(err.Message);
                    }
                });
                $("#clientLanguage").val(ui.item.isEnglish ? "Inglés" : "Español");
                $("#hourCheck").prop("disabled", false);
                $("#itemCheck").prop("disabled", false);
                $("#packageCheck").prop("disabled", false);
                $("#retainerCheck").prop("disabled", false);
                $("#discount").prop("disabled", false);
                //$("#Packages").prop("disabled", false);
                //$("#retainers").prop("disabled", false);
                //$("#items").prop("disabled", false);
                //$("#Package_Description").prop("lang", ui.item.isEnglish ? "en" : "es");


            }

        });
        $("#billDate").change(function () {
            if ($("#IsClientSelected").is(":checked")) {
                    var clientId = $("#ClientId").val()
                    $.ajax({
                    url: "@Url.Action("SearchFinished", "Package")",
                    type: "GET",
                    data: { clientId: $("#ClientId").val() },
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        $("#Packages").empty().append("<option value=''>Seleccionar paquete</option>").val('null');
                        $("#Packages").append("<option value='-1'>Todos</option>").val('-1');
                        $.each(data, function (i, item) {
                                var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                            $("#Packages").append(options);
                        });
                        $("#Packages").val("");
                        },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                            var err = eval("(" + XMLHttpRequest.responseText + ")");
                            alert(err.Message);
                        }
                    });
                $.ajax({
                    url: "@Url.Action("GetByDateMonthClient", "RetainerSubscription")",
                    type: "GET",
                    data: { clientId: $("#ClientId").val(), month: $("#month").val(), year: $("#year").val() },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        $("#retainers").empty().append("<option value=''>Seleccionar retainer</option>").val('null');
                        $("#retainers").append("<option value='-1'>Todos</option>").val('-1');
                        $.each(data, function (i, item) {
                                var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                            $("#retainers").append(options);
                        });
                        $("#retainers").val("");
                        $.each(data, function (i, item) {
                                var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                            $("#retainers").append(options);
                            });
                        },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                            var err = eval("(" + XMLHttpRequest.responseText + ")");
                            alert(err.Message);
                        }
                    });
                //$("#Packages").prop("disabled", false);
                //$("#retainers").prop("disabled", false);
                //$("#items").prop("disabled", false);
                }
        });
        $("#month").change(function () {
            if ($("#IsClientSelected").is(":checked")) {
                    var clientId = $("#ClientId").val()
                    $.ajax({
                    url: "@Url.Action("SearchFinished", "Package")",
                    type: "GET",
                    data: { clientId: $("#ClientId").val() },
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        $("#Packages").empty().append("<option value=''>Seleccionar paquete</option>").val('null');
                        $("#Packages").append("<option value='-1'>Todos</option>").val('-1');
                        $.each(data, function (i, item) {
                                var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                            $("#Packages").append(options);
                        });
                        $("#Packages").val("");
                        },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                            var err = eval("(" + XMLHttpRequest.responseText + ")");
                            alert(err.Message);
                        }
                    });
                $.ajax({
                    url: "@Url.Action("GetByDateMonthClient", "RetainerSubscription")",
                    type: "GET",
                    data: { clientId: $("#ClientId").val(), month: $("#month").val(), year: $("#year").val() },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        $("#retainers").empty().append("<option value=''>Seleccionar retainer</option>").val('null');
                        $("#retainers").append("<option value='-1'>Todos</option>").val('-1');
                        $.each(data, function (i, item) {
                                var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                            $("#retainers").append(options);
                        });
                        $("#retainers").val("");
                        },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                            var err = eval("(" + XMLHttpRequest.responseText + ")");
                            alert(err.Message);
                        }
                    });
                //$("#Packages").prop("disabled", false);
                //$("#retainers").prop("disabled", false);
                //$("#items").prop("disabled", false);
                }
        });
        $("#year").change(function () {
            if ($("#IsClientSelected").is(":checked")) {
                    var clientId = $("#ClientId").val()
                    $.ajax({
                    url: "@Url.Action("SearchFinished", "Package")",
                    type: "GET",
                    data: { clientId: $("#ClientId").val() },
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        $("#Packages").empty().append("<option value=''>Seleccionar paquete</option>").val('null');
                        $("#Packages").append("<option value='-1'>Todos</option>").val('null');
                        $.each(data, function (i, item) {
                                var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                            $("#Packages").append(options);
                        });
                        $("#Packages").val("");
                            //console.log(data);
                        },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                            var err = eval("(" + XMLHttpRequest.responseText + ")");
                            alert(err.Message);
                        }
                    });
                $.ajax({
                    url: "@Url.Action("GetByDateMonthClient", "RetainerSubscription")",
                    type: "GET",
                    data: { clientId: $("#ClientId").val(), month: $("#month").val(), year: $("#year").val() },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        $("#retainers").empty().append("<option value=''>Seleccionar retainer</option>").val('null');
                        $("#retainers").append("<option value='-1'>Todos</option>").val('-1');
                        $.each(data, function (i, item) {
                                var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                            $("#retainers").append(options);
                        });
                        $("#retainers").val("");
                        },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                            var err = eval("(" + XMLHttpRequest.responseText + ")");
                            alert(err.Message);
                        }
                    });
                //$("#Packages").prop("disabled", false);
                //$("#retainers").prop("disabled", false);
                //$("#items").prop("disabled", false);
                }
        });
        $("#itemCheck").change(function () {
            if ($("#itemCheck").prop("checked")) {
                $("#items").prop("disabled", false);
            }
            else {
                $("#items").val("");
                $("#items").prop("disabled", true);
            }
        });
        $("#packageCheck").change(function () {
            if ($("#packageCheck").prop("checked")) {
                if ($("#Packages").children().length > 2) {
                    $("#Packages").prop("disabled", false);
                }
            }
            else {
                $("#Packages").val("");
                $("#Packages").prop("disabled", true);
            }
        });
        $("#retainerCheck").change(function () {
            if ($("#retainerCheck").prop("checked")) {
                if ($("#retainers").children().length > 2) {
                    $("#retainers").prop("disabled", false);
                }
            }
            else {
                $("#retainers").prop("disabled", true);
                $("#retainers").val("");
            }
        });
        $("#discount").change(function () {
            if ($("#discount").val() === "") {
                $("#discountAmount").prop("disabled", true);
                $("#discountAmount").val("");
            }
            else {
                console.log($("#discount").val())
                if ($("#discount").val() == 1) {
                    $("#discountAmount").attr({
                        "max": 100,
                        "min": 0
                    });
                    $("#discountAmount").val(0);
                }
                else if ($("#discount").val() == 2) {
                    $("#discountAmount").removeAttr("max")
                    $("#discountAmount").attr({
                        "min": 0
                    });
                    $("#discountAmount").val(0);
                }
                $("#discountAmount").prop("disabled", false);
            }
        });
        $("#btnGenerate").click(function () {
            if (validateData()) {
                var header = {}
                header.ClientId = $("#ClientId").val();
                header.BillDate = $("#billDate").val();
                header.BillDiscountType = $("#discount").val();
                header.BillDiscount = $("#discountAmount").val();
                header.BillMonth = $("#month").val();
                header.BillYear = $("#year").val();
                header.BillName = $("#billName").val();
                var request = {}
                request.Hours = $("#hourCheck").prop("checked");
                request.PackageId = $("#Packages").val();
                request.BillableRetainerId = $("#retainers").val();
                request.ItemId = $("#items").val();
                $.ajax({
                    url: "@Url.Action("GenerateAndSaveBill", "Bill")",
                    type: "POST",
                    data: { billHeader: header, billRequest: request },
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        console.log(data);
                        cleanData();
                        showSuccess("Éxito al generar la prefactura");
                        downloadPDF(data.result);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        var err = eval("(" + XMLHttpRequest.responseText + ")");
                        showError(err.Message);
                        alert(err.Message);
                    }
                });
            }
            else {
                showError("Debe llenar los campos requeridos (*) y escoger al menos uno de los elementos a facturar.")
            }
        });
        function validateData() {
            if ($("#IsClientSelected").is(":checked") && $("#billDate").val() !== "" && $("#month").val() !== "" && $("#year").val() !== "" &&
                ($("#Packages").val() !== "" || $("#retainers").val() !== "" || $("#items").val() !== "" || $("#hourCheck").is(":checked")) &&
                ($("#discount").val() == 1 ? $("#discountAmount").val() >= 0 && $("#discountAmount").val() <= 100 :
                $("#discount").val() == 2 ? $("#discountAmount").val() >=0 : true)) {
                console.log("completo");
                return true;
            }
            else {
                console.log("vacio");
                return false;
            }
        }
        function downloadPDF(pdf) {
            var link = document.getElementById("download");
            link.href = 'data:application/octet-stream;base64,' + pdf;
            link.download = 'FacturaCliente' + $("#billName").val() + 'Mes' + $("#month").val()+'DelAño'+$("#year").val()+'.pdf';
            link.click();
        }
        function showSuccess(message) {
            $("#placeholderSuccess").html('<div class="alert alert-success alert-dismissible fade show">' + message +
                '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
        }
        function showError(message) {
            $("#placeholderError").html('<div class="alert alert-danger alert-dismissible fade show">' + message +
                '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
        }
        function cleanData() {
            $("#ClientId").val("");
            $("#isEnglish").prop("checked", false);
            $("#IsClientSelected").prop("checked", false);
            $("#clientFilter").val("");
            $("#billDate").val("");
            $("#ClientName").val("");
            $("#clientLanguage").val("")
            $("#hourCheck").prop("checked", false);
            $("#itemCheck").prop("checked", false);
            $("#packageCheck").prop("checked", false);
            $("#retainerCheck").prop("checked", false);
            $("#items").val("");
            $("#Packages").empty().append("<option value=''>Seleccionar paquete</option>").val('null');
            $("#retainers").empty().append("<option value=''>Seleccionar retainer</option>").val('null');
            $("#discount").val("");
            $("#discountAmount").val("");
            $("#billDate").datepicker("setDate", date);
            $("#month").val(date.getMonth() + 1);
            $("#year").val(date.getFullYear());
            $("#billName").val("");
        }
    });
</script>
<h4>Facturación</h4>
<br />
<form>
    <input type="number" hidden asp-for="@Model.ClientId" id="ClientId" />
    <input type="checkbox" hidden asp-for="@Model.IsEnglish" id="isEnglish" />
    <input type="checkbox" hidden asp-for="@Model.IsClientSelected" id="IsClientSelected" />
    <div class="form-row">
        <div class="form-group col-md-5">
            <label for="clientFilter">Búsqueda del cliente:*</label>
            <input type="text" id="clientFilter" class="form-control" placeholder="Búsqueda del cliente" aria-label="Búsqueda del cliente" />
        </div>
        <div class="form-group col-md-5">
            <label for="activityDate">Fecha:*</label>
            <input type="text" id="billDate" class="form-control" placeholder="Fecha" aria-label="Fecha del registro" />
        </div>
    </div>
    <div class="form-row" style="margin-top:20px">
        <div class="form-group col-md-5">
            <label for="ClientName">Nombre del cliente:</label>
            <input type="text" readonly asp-for="@Model.ClientName" class="form-control" aria-label="Nombre del cliente" />
        </div>
        <div class="form-group col-md-5">
            <label for="clientName">Idioma de facturación:</label>
            <input type="text" readonly id="clientLanguage" value="@(Model.IsClientSelected ? ((Model.IsEnglish) ? "Inglés" : "Español"): "")" class="form-control" aria-label="Idioma de facturación" />
        </div>
    </div>
    <div class="row">
        <div class="row col-12 text-center">
            <h4 class="text-muted">Elementos a facturar</h4>
        </div>
        <div class="form-row col-md-5">
            <div class="form-row col-12">
                <div class="form-group col-md-12">
                    <label for="hourCheck">Horas </label>
                    <input type="checkbox" id="hourCheck" class="form-check-inline" disabled />
                </div>
            </div>
            <div class="form-row col-12">
                <div class="form-group col-md-12">
                    <label for="itemCheck">Ítems </label>
                    <input type="checkbox" id="itemCheck" class="form-check-inline" disabled />
                </div>
            </div>
            <div class="form-row col-12">
                <div class="form-group col-md-12">
                    <label for="packageCheck">Paquetes </label>
                    <input type="checkbox" id="packageCheck" class="form-check-inline" disabled />
                </div>
            </div>
            <div class="form-row col-12">
                <div class="form-group col-md-12">
                    <label for="retainerCheck">Retainers </label>
                    <input type="checkbox" id="retainerCheck" class="form-check-inline" disabled />
                </div>
            </div>
        </div>
        <div class="form-row offset-2 col-md-5">
            <div class="form-row col-12">
                <div class="form-group col-md-12">
                    <label for="items">Ítems:</label>
                    <select id="items" class="form-control" disabled>
                        <option value="" data-price="">Seleccionar Ítem</option>
                        @foreach (var i in Model.Items)
                        {
                            <option value="@i.Id" data-price="@i.Amount">@i.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-row col-12">
                <div class="form-group col-md-12">
                    <label for="Packages">Paquetes:</label>
                    <select class="form-control" id="Packages" disabled></select>
                </div>
            </div>
            <div class="form-row col-12">
                <div class="form-group col-md-12">
                    <label for="retainers">Retainers:</label>
                    <select id="retainers" class="form-control" disabled></select>
                </div>
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-5">
            <label for="discount">Tipo de descuento:</label>
            <select id="discount" class="form-control" asp-items="@Html.GetEnumSelectList<BillDiscountEnum>()" disabled>
                <option value="">Ninguno</option>
            </select>
        </div>
        <div class="form-group col-md-5">
            <label for="discountAmount">Descuento:</label>
            <input type="number" class="form-control" id="discountAmount" disabled />
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-5">
            <label for="month">Mes:*</label>
            <select id="month" class="form-control">
                <option value="">Seleccionar mes</option>
                @for (int i = 1; i <= 12; i++)
                {
                    <option value="@i">@i</option>
                }
            </select>
        </div>
        <div class="form-group col-md-5">
            <label for="year">Año:*</label>
            <select id="year" class="form-control">
                <option value="">Seleccionar año</option>
                <option value="@(DateTime.Now.Year-1)">@(DateTime.Now.Year - 1)</option>
                <option value="@DateTime.Now.Year">@DateTime.Now.Year</option>
            </select>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-10">
            <label for="billName">Nombre de la factura:*</label>
            <input type="text" id="billName" class="form-control" placeholder="Nombre de la factura" aria-label="Nombre de la factura" />
        </div>
    </div>
    <div class="form-row">
        <button class="btn btn-primary" id="btnGenerate" type="button">Generar prefactura</button>
        <a id="download" download="Prefactura.pdf" hidden></a>
    </div>
    <div id="placeholderSuccess">

    </div>
    <div id="placeholderError">

    </div>
</form>