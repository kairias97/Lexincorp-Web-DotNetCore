@model ActivityDetailCheckViewModel
@{
    ViewData["Title"] = "Revisión de detalle";
}
<script type="text/javascript">
    var ids = [];
    function validateIfCheckAll() {
        var checkboxesToVerify = $("#tableActivities tbody tr td:first-child input:checkbox:not(:checked)");
        var rowCount = $("#tableActivities tbody tr").length;
        var packagesCount = $("#packages option:not([value=''])").length;
        var retainersCount = $("#retainersCheck option:not([value=''])").length;


        if (checkboxesToVerify.length == 0 && packagesCount === 0 && retainersCount === 0 && rowCount > 0) {
            $("#checkAll").prop("checked", true);

        }

    }
    function onRowClicked(typeId, retId, packageId, row) {
        //To exclude packages and retainers
        if (typeId !== 2 && typeId !== 3) {
            var checkbox = $(row).find("td:first-child input[type=checkbox]");

            var value = typeId === 1 ? "hora" : "item";
            
            if (checkbox.is(":checked")) {
                checkbox.prop("checked", false);
                //Since it is uncheking, it means the check is erased
                $(typeId === 1 ? "#checkHours" : "#checkItem").prop("checked", false);

            }else {
                checkbox.prop("checked", true);
                //check if there is no more unchecked
                var checkboxesToVerify = $("#tableActivities tbody tr[data-item = " + value + "] td:first-child input:checkbox:not(:checked)");
                if (checkboxesToVerify.length == 0) {
                    $(typeId === 1 ? "#checkHours" : "#checkItem").prop("checked", true);

                }
            }
            handleCheck(checkbox);

        } else if (typeId === 2) {
            var checkbox = $(row).find("td:first-child input[type=checkbox]");
            if (checkbox.is(":checked")) {
                //Handle here the deselection
                $(`#packagesList li[data-id=${packageId}] a`).click();
            } else {
                //select from dropdown
                
                $(`#packages option[value=${packageId}]`).prop('selected', true);
                $("#packages").trigger('change');
            }
        } else if (typeId === 3) {
            
            var checkbox = $(row).find("td:first-child input[type=checkbox]");
            if (checkbox.is(":checked")) {
                //handle here the deselection
                $(`#retainersList li[data-id=${retId}] a`).click();
            } else {
                //select from dropdown
                $(`#retainersCheck option[value=${retId}]`).prop('selected', true);
                $("#retainersCheck").trigger('change');
            }
            

        }
        validateIfCheckAll();
    }
    $(function () {
        $("#ByRange").on('change', function () {
            if ($(this).is(':checked')) {
                $("#dateStart").prop("disabled", false);
                $("#dateEnd").prop("disabled", false);

            } else {
                $("#dateStart").val("");
                $("#dateEnd").val("");
                $("#dateStart").prop("disabled", true);
                $("#dateEnd").prop("disabled", true);
                $("#searchBtn").click();

            }
        });
        $("#dateStart").change(function () {

            if ($("#dateStart").val() !== '' && $("#dateEnd").val() !== '') {
                $("#searchBtn").click();

            }

        });
        $("#dateEnd").change(function () {
            if ($("#dateStart").val() !== '' && $("#dateEnd").val() !== '') {
                $("#searchBtn").click();

            }
        });
        $("#dateStart").datepicker();
        $("#dateStart").datepicker("option", "dateFormat", "dd/mm/yy");
        $("#dateEnd").datepicker();
        $("#dateEnd").datepicker("option", "dateFormat", "dd/mm/yy");

        $("#clientFilter").autocomplete({
                source: function (request, response) {
                $.ajax({
                        url: "@Url.Action("Search","Client")",
                    type: "GET",
                    data: request,
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                                //console.log(data);
                                response($.map(data, function (item) {
                                    return {
                                    value: item.name,
                                label: item.name,
                                clientName: item.name,
                                clientId: item.id,
                                isEnglish: item.billingInEnglish,
                                feePerHour: item.feePerHour,
                                packages: item.packages,
                                isHourBilled: item.isHourBilled,
                                    }
                                }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                var err = eval("(" + XMLHttpRequest.responseText + ")");
                                alert(err.Message)
                        // console.log("Ajax Error!");
                    }
                        });
                    },
            minLength: 1,
            select: function (event, ui) {
                //$("#Package_ClientId").val(ui.item.clientId);
                $("#clientId").val(ui.item.clientId);
                $("#searchBtn").click();
            }

            });
        $("#expenses").change(function () {
            if ($("#expenses").val() === "" || $("#expenses").val() === undefined) {
                $("#expensesQuantity").val("");
                $("#expensesPrice").val("");
                $("#expenses").prop("title", "Seleccionar gasto");
                $("#expensesQuantity").prop("disabled", true);
                $("#expensesPrice").prop("disabled", true);
            }
            else {
                var price = $("#expenses").find(":selected").attr("data-amount");
                var isEditable = $("#expenses").find(":selected").attr("data-isReadOnly");
                $("#expensesPrice").val(price);
                if (isEditable === "Editable") {
                    $("#expensesPrice").prop("disabled", false);
                }
                else {
                    console.log("verifica que es false");
                    $("#expensesPrice").prop("disabled", true);
                }
                $("#expensesQuantity").prop("disabled", false);
            }
        });
        $("#btnAddExpense").click(function () {
            if ($("#expenses").val() !== "" && $("#expensesPrice").val() !== "" && $("#expensesQuantity").val() !== "") {
                var expense = $("#expenses").find(":selected").text();
                var id = $("#expenses").val();
                var amount = $("#expensesPrice").val();
                var quantity = $("#expensesQuantity").val();
                var row = "<tr><td hidden>" + id + "</td><td>" + expense + "</td><td>" + quantity + "</td><td>" + amount + "</td><td>" + amount * quantity + "</td><td>" +
                    "<a onclick='deleteRow(this)' href='#'><i class='fas fa-trash' data-toggle='tooltip' data-placement='top' title='Borrar'></i></a></td>";
                $("#tableData").append(row);
                $("#expenses").val("");
                $("#expensesPrice").val("");

                $("#expensesQuantity").val("");
                $("#expensesQuantity").prop("disabled", true);

                $("#expensesPrice").prop("disabled", true);
                calculateTotalExpenses();
            }
            $("#expenses").prop("title", "Seleccionar gastos")
        });
        $("#btnSubmit").click(function () {
            
            if (validateData()) {
                var body = {};
                body.Id = $("#activityId").val();
                body.ActivityType = $("#activityType").val();
                body.HoursWorked = $("#hours").val();
                body.HourlyRate = $("#feePerHour").val();
                body.ItemUnitPrice = $("#itemPrice").val();
                body.ItemQuantity = $("#itemQuantity").val();
                body.ItemSubTotal = body.ItemUnitPrice * body.ItemQuantity;
                body.PackageId = $("#Packages").val();
                body.BillableRetainerId = $("#retainers").val();
                var expenses = [];
                $('#tableData tr').each(function () {
                    var newExpense = {};
                    var cells = $(this).find("td");
                    newExpense.ExpenseId = cells[0].innerHTML;
                    newExpense.Quantity = cells[2].innerHTML;
                    newExpense.UnitCost = cells[3].innerHTML;
                    newExpense.SubTotal = cells[4].innerHTML;
                    expenses.push(newExpense);
                });
                body.Expenses = expenses;
                body.Description = $("#description").val();
                $("#btnSubmit").prop('disabled', true);
                $.ajax({
                    url: '@Url.Action("Update","Activity")',
                    type: "POST",
                    data: { body: body },
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        showSuccess("Actividad actualizada exitosamente");
                        $("#btnSubmit").prop('disabled', false);
                        $("#editForm").modal("hide");
                        clean();
                        $("#btnMark").prop('disabled', true);
                        setTimeout(
                            function () {
                                location.reload();
                            }, 1000);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $("#btnSubmit").prop('disabled', false);
                        loadingOverlay.cancel(newActivitySpinHandle);
                        var err = eval("(" + XMLHttpRequest.responseText + ")");
                        alert(err.Message);
                    }
                });
            }
            else {
                showError("Datos inválidos");
            }
        });
        $("#btnMark").click(function () {
            var retainersIds = [];
            $("#retainersList li").each(function () { 
                var li = $(this);
                retainersIds.push(li.data("id"));
            });
            var newActivitySpinHandle = loadingOverlay.activate();
            $.ajax({
                url: '@Url.Action("MarkActivities","Activity")',
                type: "POST",
                data: { body: ids, retainersIds: retainersIds},
                dataType: "json",
                dataFilter: function (data) { return data; },
                success: function (data) {
                    loadingOverlay.cancel(newActivitySpinHandle);
                    showSuccess(data.message);
                    $("#btnMark").prop('disabled', true);
                    if (data.success === true) {
                        setTimeout(
                            function () {
                                location.reload();
                            }, 1000);

                    }
                    
                }
                ,
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    loadingOverlay.cancel(newActivitySpinHandle);
                    var err = eval("(" + XMLHttpRequest.responseText + ")");
                    alert(err.Message);
                }
            })
        });
        $("#activityType").change(function () {
            
            if ($("#activityType").val() == 1) {
                $("#divFeePerHour").prop("hidden", false);
                $("#feePerHour").prop("disabled", false);
                $("#divPackage").prop("hidden", true);
                $("#Packages").prop("disabled", true);
                $("#Packages").val("");
                $("#divRetainers").prop("hidden", true);
                $("#retainers").prop("disabled", true);
                $("#retainers").val("");
                $("#divItemPrice").prop("hidden", true);
                $("#itemPrice").prop("hidden", true);
                $("#divItemQuantity").prop("hidden", true);
                $("#itemQuantity").prop("hidden", true);
                $("#itemPrice").prop("disabled", true);
                $("#itemQuantity").prop("disabled", true);
                $("#itemPrice").val("");
                $("#itemQuantity").val("");
            }
            else if ($("#activityType").val() == 2) {
                $("#divFeePerHour").prop("hidden", true);
                $("#feePerHour").prop("disabled", true);
                $("#divPackage").prop("hidden", false);
                $("#Packages").prop("disabled", false);
                $("#Packages").val("");
                $("#divRetainers").prop("hidden", true);
                $("#retainers").prop("disabled", true);
                $("#retainers").val("");
                $("#divItemPrice").prop("hidden", true);
                $("#itemPrice").prop("hidden", true);
                $("#divItemQuantity").prop("hidden", true);
                $("#itemQuantity").prop("hidden", true);
                $("#itemPrice").prop("disabled", true);
                $("#itemQuantity").prop("disabled", true);
                $("#itemPrice").val("");
                $("#itemQuantity").val("");
            }
            else if ($("#activityType").val() == 3) {
                $("#divFeePerHour").prop("hidden", true);
                $("#feePerHour").prop("disabled", true);
                $("#divPackage").prop("hidden", true);
                $("#Packages").prop("disabled", true);
                $("#Packages").val("");
                $("#divRetainers").prop("hidden", false);
                $("#retainers").prop("disabled", false);
                $("#retainers").val("");
                $("#divItemPrice").prop("hidden", true);
                $("#itemPrice").prop("hidden", true);
                $("#divItemQuantity").prop("hidden", true);
                $("#itemQuantity").prop("hidden", true);
                $("#itemPrice").prop("disabled", true);
                $("#itemQuantity").prop("disabled", true);
                $("#itemPrice").val("");
                $("#itemQuantity").val("");
            }
            else if ($("#activityType").val() == 4) {
                $("#divFeePerHour").prop("hidden", true);
                $("#feePerHour").prop("disabled", true);
                $("#divPackage").prop("hidden", true);
                $("#Packages").prop("disabled", true);
                $("#Packages").val("");
                $("#divRetainers").prop("hidden", true);
                $("#retainers").prop("disabled", true);
                $("#retainers").val("");
                $("#divItemPrice").prop("hidden", false);
                $("#itemPrice").prop("hidden", false);
                $("#divItemQuantity").prop("hidden", false);
                $("#itemQuantity").prop("hidden", false);
                $("#itemPrice").prop("disabled", false);
                $("#itemQuantity").prop("disabled", false);
                $("#itemPrice").val("");
                $("#itemQuantity").val("");
            }
            else if ($("#activityType").val() == 5) {
                $("#divFeePerHour").prop("hidden", true);
                $("#feePerHour").prop("disabled", true);
                $("#divPackage").prop("hidden", true);
                $("#Packages").prop("disabled", true);
                $("#Packages").val("");
                $("#divRetainers").prop("hidden", true);
                $("#retainers").prop("disabled", true);
                $("#retainers").val("");
                $("#divItemPrice").prop("hidden", true);
                $("#itemPrice").prop("hidden", true);
                $("#divItemQuantity").prop("hidden", true);
                $("#itemQuantity").prop("hidden", true);
                $("#itemPrice").prop("disabled", true);
                $("#itemQuantity").prop("disabled", true);
                $("#itemPrice").val("");
                $("#itemQuantity").val("");
            }
        });
        $("#packages").change(function () {
            var value = $("#packages").val();
            console.log(value);
            if (value !== "") {
                var rows = $("#tableActivities tbody tr[data-packageId = " + value + "]");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", true);
                    handleCheck(check);
                });
                var selected = $("#packages").find('option:selected');
                var id = $(selected).attr("data-id");
                var amount = $(selected).attr("data-amount");
                var name = $(selected).attr("data-name");
                //add to the list and remove the item
                var liToAdd = ` <li data-id="${id}" data-amount="${amount}" data-name="${name}">${name} ($${amount})<a onclick="handlePackageErase(${id},'${name}', ${amount}, this)" href="#"><i class="fas fa-eraser" ></i></a></li>`
                $("#packagesList").append(liToAdd);
                $(selected).remove();
                validateIfCheckAll();
            }
            /*else{
                var rows = $("#tableActivities tbody tr[data-package=paquete]");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", false);
                    handleCheck(check);
                });
            }*/
        });
        $("#retainersCheck").change(function () {
            var value = $("#retainersCheck").val();
            if (value !== "") {
                var rows = $("#tableActivities tbody tr[data-retainerId = " + value + "]");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", true);
                    handleCheck(check);
                });
                var selected = $("#retainersCheck").find('option:selected');
                var id = $(selected).attr("data-id");
                var amount = $(selected).attr("data-amount");
                var name = $(selected).attr("data-name");
                //add to the list and remove the item
                var liToAdd = ` <li data-id="${id}" data-amount="${amount}" data-name="${name}">${name} ($${amount})<a onclick="handleRetainerErase(${id},'${name}', ${amount}, this)" href="#"><i class="fas fa-eraser" ></i></a></li>`
                $("#retainersList").append(liToAdd);
                $(selected).remove();
                validateIfCheckAll();
            }
            /*else {
                var rows = $("#tableActivities tbody tr[data-retainer = retainer]");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", false);
                    handleCheck(check);
                });
            }*/
        });
        $("#checkItem").change(function () {
            if ($("#checkItem").prop("checked")) {
                var value = "item";
                var rows = $("#tableActivities tbody tr[data-item = " + value + "]");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", true);
                    handleCheck(check);
                });
            }
            else {
                $("#checkAll").prop("checked", false);
                var value = "item";
                var rows = $("#tableActivities tbody tr[data-item = " + value + "]");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", false);
                    handleCheck(check);
                });
            }
        });
        $("#checkHours").change(function () {
            if ($("#checkHours").prop("checked")) {
                var value = "hora";
                var rows = $("#tableActivities tbody tr[data-hour = " + value + "]");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", true);
                    handleCheck(check);
                });
            }
            else {
                $("#checkAll").prop("checked", false);
                var value = "hora";
                var rows = $("#tableActivities tbody tr[data-hour = " + value + "]");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", false);
                    handleCheck(check);
                });
            }
        });
        $("#checkAll").change(function () {
            if ($("#checkAll").prop("checked")) {
                $("#checkItem").prop("checked", true);
                $("#checkHours").prop("checked", true);
                var rows = $("#tableActivities tbody tr");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", true);
                    handleCheck(check);
                });
                //Handle the selection of each package and retainer
                //Firstly for packages
                var packagesToAdd = $("#packages").find('option[value!=""]');
                packagesToAdd.each(function (index, val) { 
                    var selected = $(this);
                    var id = $(selected).attr("data-id");
                    var amount = $(selected).attr("data-amount");
                    var name = $(selected).attr("data-name");
                    //add to the list and remove the item
                    var liToAdd = ` <li data-id="${id}" data-amount="${amount}" data-name="${name}">${name} ($${amount})<a onclick="handlePackageErase(${id},'${name}', ${amount}, this)" href="#"><i class="fas fa-eraser" ></i></a></li>`
                    $("#packagesList").append(liToAdd);
                    $(selected).remove();

                    //Select all packages in the table
                    var rows = $("#tableActivities tbody tr[data-packageId = " + id + "]");
                    rows.each(function (index, val) {
                        var check = $(this).find("td:first-child input[type=checkbox]");
                        check.prop("checked", true);
                        handleCheck(check);
                    });
                });
                //Then add for retainers
                //Firstly for packages
                var retainersToAdd = $("#retainersCheck").find('option[value!=""]');
                retainersToAdd.each(function (index, val) {
                    var selected = $(this);
                    var id = $(selected).attr("data-id");
                    var amount = $(selected).attr("data-amount");
                    var name = $(selected).attr("data-name");
                    //add to the list and remove the item
                    var liToAdd = ` <li data-id="${id}" data-amount="${amount}" data-name="${name}">${name} ($${amount})<a onclick="handleRetainerErase(${id},'${name}', ${amount}, this)" href="#"><i class="fas fa-eraser" ></i></a></li>`
                    $("#retainersList").append(liToAdd);
                    $(selected).remove();
                    //Select all retainers in the table
                    var rows = $("#tableActivities tbody tr[data-retainerId = " + value + "]");
                    rows.each(function (index, val) {
                        var check = $(this).find("td:first-child input[type=checkbox]");
                        check.prop("checked", true);
                        handleCheck(check);
                    });
                });

            }
            /*omitting uncheck for now else {
                var rows = $("#tableActivities tbody tr");
                rows.each(function (index, val) {
                    var check = $(this).find("td:first-child input[type=checkbox]");
                    check.prop("checked", false);
                    handleCheck(check);
                });
            }*/
        });
        if ($("#checkAll").prop("checked")) {
            var rows = $("#tableActivities tbody tr");
            rows.each(function (index, val) {
                var check = $(this).find("td:first-child input[type=checkbox]");
                check.prop("checked", true);
                handleCheck(check);
            });
        }
        if ($("#checkHours").prop("checked")) {
            var value = "hora";
            var rows = $("#tableActivities tbody tr[data-hour = " + value + "]");
            rows.each(function (index, val) {
                var check = $(this).find("td:first-child input[type=checkbox]");
                check.prop("checked", true);
                handleCheck(check);
            });

        } if ($("#checkItem").prop("checked")) {
            var value = "item";
            var rows = $("#tableActivities tbody tr[data-item = " + value + "]");
            rows.each(function (index, val) {
                var check = $(this).find("td:first-child input[type=checkbox]");
                check.prop("checked", true);
                handleCheck(check);
            });

        }

    });
    function validateData() {
        if ($("#hours").val() !== "" && $("#description").val() !== "") {
            if ($("#activityType").val() == 4) {
                if ($("#itemPrice").val() !== "" && $("#itemQuantity").val() !== "") {
                    return true;
                }
                else {
                    return false;
                }
            }
            else if ($("#activityType").val() == 1) {
                if ($("#feePerHour").val() !== "") {
                    return true;
                }
                else {
                    return false;
                }
            }
            else if ($("#activityType").val() == 2) {
                if ($("#Packages").val() !== "") {
                    return true;
                }
                else {
                    return false;
                }
            }
            else if ($("#activityType").val() == 3) {
                if ($("#retainers").val() !== "") {
                    return true;
                }
                else {
                    return false;
                }
            }
            else {
                return true;
            }
        }
        else {
            return false;
        }
    }
    function showSuccess(message) {
        $("#placeholderSuccess").html('<div class="alert alert-success alert-dismissible fade show">' + message +
            '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
    }
    function showError(message) {
        $("#placeholderError").html('<div class="alert alert-danger alert-dismissible fade show">' + message +
            '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
    }
    function handleCheck(element) {
        var id = $(element).attr("data-id");
        if ($(element).prop("checked")) {
            if (ids.includes(id)) {

            }
            else {
                ids.push(id);
            }
            var row = $(element).closest("tr");
            if (row.attr("data-packageId") !== "") {
                row.addClass("table-primary");
            }
            else if (row.attr("data-retainerId") !== "") {
                row.addClass("table-success");
            }
            else if (row.attr("data-hour") !== "") {
                row.addClass("table-warning");
            }
            else if (row.attr("data-item") !== "") {
                row.addClass("table-danger");
            }
        }
        else {
            $("#checkAll").prop("checked", false);
            ids.splice(ids.indexOf(id), 1);
            var row = $(element).closest("tr");
            if (row.attr("data-packageId") !== "") {
                row.removeClass("table-primary");
            }
            else if (row.attr("data-retainerId") !== "") {
                row.removeClass("table-success");
            }
            else if (row.attr("data-hour") !== "") {
                row.removeClass("table-warning");
            }
            else if (row.attr("data-item") !== "") {
                row.removeClass("table-danger");
            }
        }
    }
    function handleEdit(id) {
        var newActivitySpinHandle = loadingOverlay.activate();
        clean();
        $("#activityId").val(id);
            $.ajax({
                url: '@Url.Action("GetActivityDataById","Activity")',
                type: "GET",
                data: {id: id, finishedPackage: null},
                dataType: "json",
                dataFilter: function (data) { return data; },
                success: function (data) {
                    $("#type").val(data.type);
                    $("#clientName").val(data.clientName);
                    $("#activityType").empty().append("<option value='4'>Item</option>");
                    $("#activityType").append("<option value='5'>No cobrable</option>");
                    if (data.isHourBilled == "hora") {
                        $("#activityType").append("<option value='1'>Hora</option>");
                    }
                    if (data.packages.length > 0) {
                        $("#activityType").append("<option value='2'>Paquete</option>");
                        $("#Packages").prop("disabled", false);
                    }
                    else {
                        $("#Packages").prop("disabled", true);
                    }
                    if (data.retainers.length > 0) {
                        $("#activityType").append("<option value='3'>Retainer</option>");
                        $("#retainers").prop("disabled", false);
                    }
                    else {
                        $("#retainers").prop("disabled", true);
                    }
                    $("#Packages").empty().append("<option value=''>Seleccionar paquete</option>");
                    $.each(data.packages, function (i, item) {
                        var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                        $("#Packages").append(options);
                    });
                    $("#retainers").empty().append("<option value=''>Seleccionar retainer</option>");
                    $.each(data.retainers, function (i, item) {
                        var options = "<option value='" + item.id + "'>" + item.name + "</option>";
                        $("#retainers").append(options);
                    });
                    $("#activityType").val(data.type);
                    $("#feePerHour").val(data.feePerHour);
                    if (data.type == 1) {
                        $("#divFeePerHour").prop("hidden", false);
                    }
                    else if (data.type == 2) {
                        $("#Packages").val(data.packageId);
                        $("#divPackage").prop("hidden", false);
                    }
                    else if (data.type == 3) {
                        $("#retainers").val(data.billableRetainerId);
                        $("#divRetainers").prop("hidden", false);
                    }
                    else if (data.type == 4) {
                        $("#itemPrice").val(data.rate);
                        $("#divItemPrice").prop("hidden", false);
                        $("#itemQuantity").val(data.quantity);
                        $("#divItemQuantity").prop("hidden", false);
                    }
                    else if (data.type == 5) {

                    }
                    $("#activityDate").val(data.date);
                    $("#hours").val(data.hoursWorked);
                    $("#service").val(data.service);
                    $("#description").val(data.description);

                    $("#tableData").empty();
                    $.each(data.expenses, function (i, item) {
                        var id = item.id;
                        var expense = item.spanishDescription;
                        var quantity = item.quantity;
                        var amount = item.unitAmount;

                        var row = "<tr><td hidden>" + id + "</td><td>" + expense + "</td><td>" + quantity + "</td><td>" + amount + "</td><td>" + amount * quantity + "</td><td>" +
                            "<a onclick='deleteRow(this)' href='#'><i class='fas fa-trash' data-toggle='tooltip' data-placement='top' title='Borrar'></i></a></td>";
                        $("#tableData").append(row);
                    });

                    calculateTotalExpenses();
                    loadingOverlay.cancel(newActivitySpinHandle);
                    $("#editForm").modal("show");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    loadingOverlay.cancel(newActivitySpinHandle);
                    var err = eval("(" + XMLHttpRequest.responseText + ")");
                    alert(err.Message)
                    // console.log("Ajax Error!");
                }
            })
    }
    function handlePackageErase(id, name, amount, item) {

        var option = `<option value="${id}" data-id="${id}" data-amount="${amount}" data-name="${name}">${name}</option>`;
        $('#packages').append(option);
        $(item).closest('li').remove();
        //remove the package from list
        var rows = $("#tableActivities tbody tr[data-packageId = "+id+"]");
        rows.each(function (index, val) {
            var check = $(this).find("td:first-child input[type=checkbox]");
            check.prop("checked", false);
            handleCheck(check);
        });

    }
    function handleRetainerErase(id, name, amount, item) {

        var option = `<option value="${id}" data-id="${id}" data-amount="${amount}" data-name="${name}">${name}</option>`;
        $('#retainersCheck').append(option);
        $(item).closest('li').remove();
        var rows = $("#tableActivities tbody tr[data-retainerId = " + id + "]");
        rows.each(function (index, val) {
            var check = $(this).find("td:first-child input[type=checkbox]");
            check.prop("checked", false);
            handleCheck(check);
        });
    }
    function clean() {
        $("#activityId").val("");
        $("#type").val("");
        $("#activityType").val("");
        $("#Packages").val("");
        $("#divPackage").prop("hidden", true);
        $("#retainers").val("");
        $("#divRetainers").prop("hidden", true);
        $("#divFeePerHour").prop("hidden", true);
        $("#packageName").val("");
        $("#divPackageName").prop("hidden", true);
        $("#retainerName").val("");
        $("#divRetainerName").prop("hidden", true);
        $("#itemPrice").val("");
        $("#divItemPrice").prop("hidden", true);
        $("#itemQuantity").val("");
        $("#divItemQuantity").prop("hidden", true);
        $("#activityDate").val("");
        $("#hours").val("");
        $("#service").val("");
        $("#description").val("");
        $("#tableData").empty();
    }
    function deleteRow(button) {
        $(button).closest("tr").remove();
        $('tfoot tr td:last-child').html("");
        calculateTotalExpenses();
    }
    function calculateTotalExpenses() {
        //To get the total sum of the <td> that contains each subtotal
        var total = $('#tableData tr td:nth-last-child(2)')
            .map(function () {
                return parseFloat($(this).html());
            })
            .get()
            .reduce(function (total, currentValue) { return total + currentValue; });
        //To set the html content of <td> that contains total
        $('tfoot tr td:last-child').html(total);
    }
</script>
<h4>Revisión de detalles facturables</h4>
<form asp-controller="Activity" asp-action="DetailCheck" method="get">
    <input type="number" hidden id="activityId" />
    <input type="number" hidden id="type" />
    <div id="placeholderSuccess" tabindex="">

    </div>
    <div class="form-row">
        <div class="form-group col-md-3">
            <label for="filter">Cliente:</label>
            <input type="text" class="form-control form-control-sm" id="clientFilter" name="filter" value="@Model.CurrentFilter" placeholder="Nombre del cliente" aria-label="Nombre del cliente" aria-describedby="searchBtn">
            <input type="text" class="form-control form-control-sm" id="clientId" name="id" hidden value="@Model.CurrentId" />

        </div>
        <div class="form-group col-md-2">
            <label for="filter">Inicio:</label>
            @if (Model.ByRange)
            {
                <input type="text" id="dateStart" autocomplete="off" class="form-control form-control-sm" name="dateStart" value="@Model.CurrentStartDate" placeholder="Fecha" aria-label="Fecha de inicio" aria-describedby="searchBtn" />


            }
            else
            {
                <input type="text" id="dateStart" autocomplete="off" class="form-control form-control-sm" disabled name="dateStart" value="@Model.CurrentStartDate" placeholder="Fecha" aria-label="Fecha de inicio" aria-describedby="searchBtn" />


            }

        </div>

        <div class="form-group col-md-2">
            <label for="filter">Fin:</label>
            @if (Model.ByRange)
            {
                <input type="text" id="dateEnd" autocomplete="off" class="form-control form-control-sm" name="dateEnd" value="@Model.CurrentEndDate" placeholder="Fecha" aria-label="Fecha de fin" aria-describedby="button-addon2" />


            }
            else
            {
                <input type="text" id="dateEnd" autocomplete="off" class="form-control form-control-sm" disabled name="dateEnd" value="@Model.CurrentEndDate" placeholder="Fecha" aria-label="Fecha de fin" aria-describedby="button-addon2" />


            }

        </div>
        <div class="form-group col-md-1">
            <div class="form-check">
                <label style="font-size:small">Rango</label>
                @Html.EditorFor(x => x.ByRange)
                @*@if (Model.ByRange)
                {
                    <input type="checkbox" checked name="byRange" id="byRange" />

                }
                else
                {
                    <input type="checkbox" name="byRange" id="byRange" />

                }*@
                <br />
                <button class="btn btn-outline-info" type="submit" id="searchBtn">Buscar</button>
            </div>

        </div>
        <div class="form-group col-md-1">
            <div class="form-check">
                <label style="font-size:small">Ítem:</label>

                @Html.EditorFor(x => x.checkItem)
            </div>
            <div class="form-check">
                <label style="font-size:small">Hora:</label>
                @Html.EditorFor(x => x.checkHours)
            </div>
            <div class="form-check">
                <label style="font-size:small">Todo:</label>
                @Html.EditorFor(x => x.checkAll)
            </div>

        </div>
        <div class="form-group col-md-1">
            <span style="font-size:small"><span class="hourly-square"></span>&nbsp;Hora</span><br />
            <span style="font-size:small"><span class="item-square"></span>&nbsp;Ítem</span><br />
        </div>
        <div class="form-group col-md-1">
            <span style="font-size:small"><span class="package-square"></span>&nbsp;Paquete</span><br />
            <span style="font-size:small"><span class="retainer-square"></span>&nbsp;Retainer</span><br />
        </div>

    </div>
    <div class="form-row">
        <div class="form-group col-md-3">
            @if (Model.Packages.Count() > 0)
            {
                <label>Paquetes facturables:</label>
                <select class="form-control form-control-sm" id="packages">
                    <option value="">Seleccionar paquete</option>
                    @if (!Model.checkAll)
                    {
                        @foreach (var p in Model.Packages)
                        {
                            <option value="@p.Id" data-id="@p.Id" data-amount="@p.Amount" data-name="@p.Name">@p.Name</option>
                        }

                    }

                </select>
            }
            else
            {
                <label>Paquetes facturables:</label>
                <select class="form-control form-control-sm" disabled></select>
            }
        </div>
        <div class="form-group col-md-3">
            @if (Model.BillableRetainers.Count() > 0)
            {
                <label>Retainers facturables:</label>
                <select class="form-control form-control-sm" id="retainersCheck">
                    <option value="">Seleccionar retainer</option>
                    @if (!Model.checkAll)
                    {
                        @foreach (var p in Model.BillableRetainers)
                        {
                            <option value="@p.Id" data-id="@p.Id" data-amount="@p.AgreedFee" data-name="@p.Name">@p.Name</option>
                        }

                    }

                </select>
            }
            else
            {
                <label>Retainers facturables:</label>
                <select class="form-control form-control-sm" disabled></select>
            }
        </div>
        <div class="form-group col-md-3">

            <p><strong>Paquetes seleccionados:</strong></p>
            <ul id="packagesList">
                @if(Model.checkAll)
                {
                    foreach (var p in Model.Packages)
                    {
                        <li data-id="@p.Id" data-amount="@p.Amount" data-name="@p.Name">@($"{p.Name} (${p.Amount})")<a onclick="handlePackageErase(@(p.Id),'@(p.Name)', @(p.Amount), this)" href="#"><i class="fas fa-eraser"></i></a></li>

                    }

                }
            </ul>
        </div>
        <div class="form-group col-md-3">
           <p><strong>Retainers seleccionados:</strong></p>
           <ul id="retainersList">
               @if (Model.checkAll)
               {
                   foreach (var r in Model.BillableRetainers)
                   {
                       <li data-id="@r.Id" data-amount="@r.AgreedFee" data-name="@r.Name">@($"{r.Name} (${r.AgreedFee})")<a onclick="handleRetainerErase(@(r.Id),'@r.Name', @r.AgreedFee, this)" href="#"><i class="fas fa-eraser"></i></a></li>

                   }

               }
           </ul>
        </div>


    </div>
    <div class="table-responsive">
        <table class="table table-sm table-bordered table-hover" id="tableActivities">
            <thead id="#detailHeader">
                <tr class="d-flex">
                    <th class="col-1"></th>
                    <th class="col-1">Fecha</th>
                    <th class="col-4">Concepto</th>
                    <th class="col-1">Horas</th>
                    <th class="col-1">Precio</th>
                    <th class="col-3">Asociado a</th>
                    <th class="col-1">Alias</th>

                </tr>
            </thead>
            <tbody class="table-wrapper-scroll-y">
                @foreach (var activity in Model.Activities)
                {
                    <tr class="d-flex" data-packageId="@activity.PackageId" data-retainerId="@activity.BillableRetainerId" data-hour="@(activity.ActivityType == ActivityTypeEnum.Hourly ? "hora" : "")"
                        data-item="@(activity.ActivityType == ActivityTypeEnum.Item ? "item" : "")" data-package="@(activity.ActivityType == ActivityTypeEnum.Package ? "paquete" : "")"
                        data-retainer="@(activity.ActivityType == ActivityTypeEnum.Retainer ? "retainer" : "")" onclick="onRowClicked(@((int)activity.ActivityType), @(activity.BillableRetainerId ?? 0 ), @(activity.PackageId ?? 0),this)">
                        <td class="col-1">
                            <a onclick="handleEdit(@activity.Id)"><i class="fas fa-edit fa-2x" data-toggle="tooltip" data-placement="top" title="Editar"></i></a>
                            @if (activity.ActivityType == ActivityTypeEnum.Retainer || activity.ActivityType == ActivityTypeEnum.Package)
                            {
                                <input type="checkbox" data-id="@activity.Id" disabled />

                            }
                            else
                            {
                                <input type="checkbox" data-id="@activity.Id" />

                            }
                            <span style="font-size:small"><span class="@(activity.ActivityType == ActivityTypeEnum.Hourly ? "hourly": activity.ActivityType == ActivityTypeEnum.Item ? "item" : activity.ActivityType == ActivityTypeEnum.Retainer ? "retainer": activity.ActivityType == ActivityTypeEnum.Package ? "package" : "")-square"></span>&nbsp;</span>
                        </td>
                        <td class="col-1">@activity.RealizationDate.ToString("dd/MM/yyyy")</td>
                        <td class="col-4">@activity.Description</td>
                        <td class="col-1">@Math.Round(activity.HoursWorked, 2)</td>

                        <td class="col-1">@Math.Round(activity.Subtotal, 2)</td>
                        @if (activity.ActivityType == ActivityTypeEnum.Package)
                        {
                            <td class="col-3">@(activity.Package?.Name ?? "-")</td>
                        }
                        else if (activity.ActivityType == ActivityTypeEnum.Retainer)
                        {
                            <td class="col-3">@(activity.BillableRetainer?.Name ?? "-")</td>
                        }
                        else if (activity.ActivityType == ActivityTypeEnum.Item)
                        {
                            <td class="col-3">Ítem</td>
                        }
                        else if (activity.ActivityType == ActivityTypeEnum.Hourly)
                        {
                            <td class="col-3">Hora</td>
                        }
                        else if (activity.ActivityType == ActivityTypeEnum.NoBillable)
                        {
                            <td class="col-3">No cobrable</td>
                        }
                        <td class="col-1">@activity.Creator.Attorney.Alias</td>



                    </tr>
                }
                

            </tbody>
        </table>

    </div>

    <button class="btn btn-primary btn-sm" type="button" id="btnMark">Marcar como facturable las actividades seleccionadas</button>
    <br />
    <!--Modal begin for edit-->
    <!-- Modal -->
    <div class="modal fade" id="editForm" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <!--Content-->
            <div class="modal-content form-elegant">
                <!--Header-->
                <div class="modal-header text-center">
                    <h3 class="modal-title dark-grey-text font-weight-bold my-3" id="editModalLabel"><strong>Edición de actividad</strong></h3>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <!--Body-->
                <div class="modal-body mx-4">
                    <div id="placeholderError">

                    </div>
                    <div class="form-row" style="margin-top:10px">
                        <div class="form-group col-md-4">
                            <label for="clientName">Cliente: </label>
                            <input type="text" id="clientName" class="form-control form-control-sm" disabled />
                        </div>
                        <div class="form-group col-md-4">
                            <label for="activityDate">Fecha:</label>
                            <input type="text" id="activityDate" class="form-control form-control-sm" disabled />
                        </div>
                        <div class="form-group col-md-4">
                            <label for="activityType">Tipo de actividad: </label>
                            <select id="activityType" class="form-control form-control-sm"></select>
                        </div>
                        <div class="form-group col-md-3" id="divPackage" hidden>
                            <label id="labelPackage" for="Packages">Paquetes disponibles:</label>
                            <select class="form-control form-control-sm" id="Packages" disabled></select>
                        </div>
                        <div class="form-group col-md-4" id="divRetainers" hidden>
                            <label id="labelRetainers" for="retainers">Retainers:</label>
                            <select id="retainers" class="form-control form-control-sm" disabled></select>
                        </div>
                        <div class="form-group col-md-4" id="divItemPrice" hidden>
                            <label for="itemPrice">Precio del ítem:</label>
                            <input type="text" id="itemPrice" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-4" id="divItemQuantity" hidden>
                            <label for="itemQuantity">Cantidad del ítem:</label>
                            <input type="text" id="itemQuantity" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-4">
                            <label for="hours">Horas trabajadas:</label>
                            <input type="number" min="1" id="hours" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-4" id="divFeePerHour" hidden>
                            <label for="feePerHour">Precio por hora:</label>
                            <input type="text" id="feePerHour" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-5">
                            <label for="service">Servicio:</label>
                            <input type="text" id="service" class="form-control form-control-sm" disabled />
                        </div>
                        <div class="form-group col-md-7">
                            <label for="description">Descripción:</label>
                            <textarea id="description" class="form-control form-control-sm" spellcheck="true" lang="es"></textarea>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <label for="expenses">Gastos:*</label>
                            <select id="expenses" class="form-control form-control-sm">
                                <option data-amount="" value="">Seleccionar gasto</option>
                                @foreach (var e in Model.Expenses)
                                {
                                    <option data-amount="@e.Amount" data-isReadOnly="@(e.IsReadOnly ? "Editable" : "No Editable")" value="@e.Id">@e.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-3">
                            <label for="expensesQuantity">Cantidad:*</label>
                            <input type="number" class="form-control form-control-sm" id="expensesQuantity" disabled />
                        </div>
                        <div class="form-group col-md-3">
                            <label for="expensesPrice">Monto (USD):*</label>
                            <input type="text" class="form-control form-control-sm" id="expensesPrice" disabled />
                        </div>
                        <div class="form-group col-md-1">
                            <button class="btn btn-primary btn-sm" style="margin-top:30px" id="btnAddExpense" type="button">Agregar</button>
                        </div>
                    </div>
                    <div id="containerTable" class="form-row table-responsive table-striped">
                        <table id="expensesTable" class="table table-sm table-stribed table-bordered">
                            <thead>
                                <tr>
                                    <th hidden>ID</th>
                                    <th>Gasto</th>
                                    <th>Cantidad</th>
                                    <th>Monto</th>
                                    <th>Subtotal</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody id="tableData"></tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="4" class="text-right">Total (USD):</td>
                                    <td class="text-right"></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="form-row">
                        <button class="btn btn-primary btn-sm" id="btnSubmit" type="button">Actualizar</button>
                    </div>
                </div>
            </div>
            <!--/.Content-->
        </div>
    </div>
</form>