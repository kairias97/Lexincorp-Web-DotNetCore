@{
    ViewData["Title"] = "Registrar abono";
}
@model NewClientDepositViewModel
<script type="text/javascript">
    $(function ()
    {
        function fetchPackages() {
            var clientId = $("#ClientDeposit_ClientId").val();
            $.ajax({
                url: "@Url.Action("SearchAllUnbilled", "Package")",
                type: "GET",
                data: { clientId: clientId},
                dataType: "json",
                dataFilter: function (data) { return data; },
                success: function (data) {
                    if (data.length) {
                        $("#ClientDeposit_PackageId").empty();
                        data.forEach(function (p) {
                            var option = "<option value='" + p.id + "'>" + p.name + "</option>"
                            $("#ClientDeposit_PackageId").append(option);
                        });

                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    var err = eval("(" + XMLHttpRequest.responseText + ")");
                    alert(err.Message)
                    // console.log("Ajax Error!");
                }
            });

        }
        $("#depositDate").datepicker();
        $("#depositDate").datepicker("option", "dateFormat", "dd/mm/yy");
        var date = new Date();
        var lastDay = new Date(date.getFullYear(), date.getMonth(), date.getDate());
        $("#depositDate").datepicker("option", {
            maxDate: lastDay
        });
        $("#depositDate").datepicker("setDate", date);

        $("#clientFilter").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("Search", "Client")",
                    type: "GET",
                    data:request,
                    dataType: "json",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.name,
                                label: item.name,
                                clientName: item.name,
                                clientId: item.id,
                                isEnglish: item.billingInEnglish
                            }
                        }))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        var err = eval("(" + XMLHttpRequest.responseText + ")");
                        alert(err.Message)
                        // console.log("Ajax Error!");
                    }
                })
             },
            minLength: 1,
            select: function (event, ui) {
                //Setup here the id and fields
                $("#ClientDeposit_ClientId").val(ui.item.clientId);
                $("#ClientName").val(ui.item.clientName);
                $("#IsClientSelected").prop('checked', true);
                fetchPackages();
                


            }

        });

    });
</script>
<h2>Registro de nuevo abono</h2>
<br />
<form asp-action="New" asp-controller="ClientDeposit" role="alert">
    @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
    {
        // Bootstrap 2 = "alert-error", Bootstrap 3 and 4 = "alert-danger"
        <div class="alert alert-danger alert-dismissible fade show">
            @Html.ValidationSummary(false, "Errores de validación:")
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>

        </div>
    }
    <div class="form-row">
        <div class="form-group col-md-5">
            <label for="clientFilter">Búsqueda de cliente:</label>
            <input type="text" class="form-control" id="clientFilter" placeholder="Nombre del cliente" aria-label="Búsqueda de cliente">

        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-5">
            <input type="checkbox" hidden asp-for="@Model.IsClientSelected" />
            <input type="number" hidden asp-for="@Model.ClientDeposit.ClientId" />
            <label for="ClientName">Nombre del cliente:</label>
            <input type="text" readonly asp-for="@Model.ClientName" class="form-control" aria-label="Nombre del cliente">

        </div>
        <div class="form-group col-md-5">
            <label for="ClientDeposit_Package">Paquete:</label>
            <select asp-for="@Model.ClientDeposit.PackageId" class="form-control" required asp-items="@(new SelectList(Model.Packages,"Id","Name", Model.ClientDeposit.PackageId))">

            </select>
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-5">
            <label for="Package_Amount">Monto recibido (USD)*:</label>
            <input type="number" step="0.01" min="0" class="form-control" asp-for="@Model.ClientDeposit.Amount" required/>
        </div>
        <div class="form-group col-md-5">
            <label for="Package_RealizationDate">Fecha de recepción*:</label>
            <input type="text" id="depositDate" class="form-control" asp-for="@Model.ClientDeposit.ReceivedDate" required />
        </div>
        
    </div>
    <button type="submit" class="btn btn-primary">Agregar</button>

    <br />
</form>
<br />





